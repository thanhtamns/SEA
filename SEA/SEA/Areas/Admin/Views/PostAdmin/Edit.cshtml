@model Models.Post
@using SEA.Heplers
@{
    ViewBag.Title = "Edit";
    int dem = 10000;
}
<script type="text/javascript">
    var editor;
    function createEditor(languageCode, id) {
        var editor = CKEDITOR.replace(id, {
            language: languageCode
        });
    }
    $(function () {
        createEditor('vi', 'text');
    });
</script>
<h2>Edit</h2>
<div class="xs">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="well1 white">
            <div class="form-horizontal">
                <h4>Post</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control", id = "Image" } })
                        @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                        <div class="col-md-10">
                            <img src="" id="Container" class="img-responsive" />
                        </div>
                        <a href="#" class="btn btn-block" id="SelectImage">Select Image</a>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", id = "text" } })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IsActive, Select.SelectIsActive(), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LangId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.LangId, Select.SelectLang(), new { @class = "form-control", id = "LangId" })
                        @Html.ValidationMessageFor(model => model.LangId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!--băt đầu -->
                <script>
                    var listTopic = new Array();
                    $(document).ready(function () {
                        var a = 0;
                        $("#AddTopic").click(function (e) {
                            e.preventDefault();
                            var topic = $("#TopicSelected").val();
                            var check = 0;
                            for (var i = 0; i < listTopic.length; i++) {
                                if(listTopic[i]==topic)
                                {
                                    check = 1;
                                    break;
                                }
                            }
                            if (check == 0) {
                                listTopic.push(topic);
                                $("#Root").after(
                                    "<tr id=\"" + a + "\">\
                                    <td id=\"a"+ a + "\">\
                                        "+ topic + "\
                                    </td>\
                                    <td>\
                                        <a class=\"btn-danger btn\" onclick=\"RemoveTopic(" + a + ")\">Remove</a>\
                                    </td>\
                                </tr>\
                            ");
                                a++;
                                document.getElementById("ListTopic").value = listTopic;
                            }
                            else {
                                alert("Topic " + topic + " đã tồn tại !");
                            }
                        })
                        $("#LangId").change(function () {
                            var lang = $("#LangId").val();
                            $("#Load").load("/Admin/TopicAdmin/ListTopicByLanguage/" + lang);
                            RemoveAll();
                        })
                    });
                    function RemoveTopic(id) {
                        var Var = $("#a" + id + "").text();
                        $("#" + id + "").remove();
                        Var = Var.trim();
                        var flag = 0;
                        var size = listTopic.length - 1;
                        for (var i = 0; i < size; i++) {
                            if (listTopic[i] == Var) {
                                flag = 1;
                            }
                            if (flag == 1) {
                                listTopic[i] = listTopic[i + 1];
                            }
                        }
                        listTopic.pop();
                        document.getElementById("ListTopic").value = listTopic;
                    };
                    function RemoveAll() {
                        while (listTopic.length!=0) {
                            listTopic.pop();
                        }
                        document.getElementById("Root").parentNode.innerHTML = "<tr id=\"Root\"></tr>";
                        document.getElementById("ListTopic").value = listTopic;
                    }
                </script>
                <!--kết thúc-->
                <div class="form-group">
                    @Html.Label("Topic", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        <input type="hidden" name="ListTopic" id="ListTopic">
                        <table class="table table-responsive">
                            <thead>
                                <tr>
                                    <th class="col-md-10">Topic</th>
                                    <th class="col-md-2">
                                        <a id="AddTopic" class="btn-block btn btn-warning warning_22">Add</a>
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr id="Root"></tr>
                                @foreach (var item in ViewBag.ListTopic as List<string>)
                                {
                                    string td = 'a' + dem.ToString();
                                    <tr id="@dem">
                                        <td id="@td">
                                            @item
                                        </td>
                                        <td>
                                            <a class="btn-danger btn" onclick="RemoveTopic(@dem)">Remove</a>
                                        </td>
                                    </tr>
                                    dem++;
                                }
                            </tbody>
                        </table>
                        @foreach (var item in ViewBag.ListTopic as List<string>)
                        {
                            <script>
                                listTopic.push("@item");
                            </script>
                        }
                        <script>
                            document.getElementById("ListTopic").value = listTopic;
                        </script>
                    </div>
                    <div class="col-md-5" id="Load">
                        @Html.DropDownList("A", Select.SelectNameTopic(Model.LangId), new { @class = "form-control", id = "TopicSelected" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Edit" class="btn btn-default" />
                    </div>
                </div>
            </div>

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    }
</div>
